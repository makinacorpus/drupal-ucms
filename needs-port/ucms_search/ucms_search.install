<?php

/**
 * Implements hook_schema().
 */
function ucms_search_schema() {
  $schema = [];

  $schema['ucms_search_index'] = [
    'description' => 'Search indices',
    'fields' => [
      'index_key' => [
        'description' => "Index identifier",
        'type'        => 'varchar',
        'length'      => 128,
        'not null'    => true,
      ],
      'name'     => [
        'description' => "Human readable name",
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => true,
      ],
      'data' => [
        'description' => "Serialized index param array",
        'type'        => 'text',
        'not null'    => true,
      ],
    ],
    'primary key' => ['index_key'],
  ];

  $schema['ucms_search_status'] = [
    'description' => 'Search node status',
    'fields' => [
      'nid' => [
        'description' => "Node identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'index_key'     => [
        'description' => "Index name to use",
        'type'        => 'varchar',
        'length'      => 64,
        'not null'    => true,
      ],
      'needs_reindex' => [
        'description' => "Does the content needs to be indexed, 0 for false, 1 for true",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'needs_attachments_reindex' => [
        'description' => "Does the content needs to have attachments indexed, 0 for false, 1 for true",
        'type'        => 'int',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
        'default'     => 0,
      ],
    ],
    'indexes' => [
      'ucms_search_status_reindex' => ['index_key', 'needs_reindex'],
    ],
    'foreign keys' => [
      'nid' => [
        'table'   => 'node', 
        'columns' => ['nid' => 'nid'],
      ],
    ],
    'primary key' => ['nid', 'index_key'],
  ];

  return $schema;
}

/**
 * Implements hook_enable().
 */
function ucms_search_enable() {
  // This will happen when install and enable happens during the same PHP
  // runtime, we don't care about clearing the indexes on install.
  if (!\Drupal::getContainer()->has('ucms_search.index_storage')) {
    return;
  }
  // This can't be in the hook_install() since that we need our services to
  // be registered within the container before we can start using this.
  foreach (ucms_search_index()->keys() as $index) {
    ucms_search_index()->clear($index);
  }
}

/**
 * Implements hook_disable().
 */
function ucms_search_disable() {
  // This can't be in the hook_uninstall() since that we need our services to
  // be registered within the container before we can start using this.
  foreach (ucms_search_index()->keys() as $index) {
    ucms_search_index()->clear($index);
  }
}

/**
 * Adds the {ucms_search_index} table.
 */
function ucms_search_update_7001() {
  if (!db_table_exists('ucms_search_index')) {
    db_create_table('ucms_search_index', drupal_get_schema_unprocessed('ucms_search', 'ucms_search_index'));
  }
}

/**
 * Adds the column {needs_attachments_reindex} in {ucms_search_status} table.
 */
function ucms_search_update_7002() {
  if (!db_field_exists('ucms_search_status', 'needs_attachments_reindex')) {
    db_add_field('ucms_search_status', 'needs_attachments_reindex', [
      'description' => "Does the content needs to have attachments indexed, 0 for false, 1 for true",
      'type'        => 'int',
      'unsigned'    => TRUE,
      'not null'    => TRUE,
      'default'     => 0,
    ]);
  }
}
