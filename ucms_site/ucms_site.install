<?php

use MakinaCorpus\Ucms\Site\Environment\NodeDefinition;

/**
 * Implements hook_schema().
 */
function ucms_site_schema() {
  $schema = [];

  $schema['ucms_site'] = [
    'description' => 'Site instances',
    'fields' => [
      'id' => [
        'description' => "Site identifier",
        'type'        => 'serial',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'title_admin' => [
        'description' => 'Administrative title',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => true,
        'default'     => '',
      ],
      'title' => [
        'description' => 'Displayed title',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => true,
        'default'     => '',
      ],
      'state' => [
        'description' => "Site workflow state",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'type' => [
        'description' => "Site type",
        'type'        => 'varchar',
        'length'      => 64,
        'not null'    => false,
        'default'     => null,
      ],
      'theme' => [
        'description' => "Theme to use",
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => false,
        'default'     => null,
      ],
      'allowed_protocols' => [
        'description' => "1 = HTTP only, 2 = HTTPS only, 0 = let Drupal discover it",
        'type'        => 'int',
        'not null'    => true,
        'default'     => 0,
      ],
      'http_host' => [
        'description' => "Site domain name",
        'type'        => 'varchar',
        'length'      => 1024,
        'not null'    => false,
        'default'     => null,
      ],
      'http_redirects' => [
        'description' => "Site domain other name (HTTP redirections)",
        'type'        => 'text',
      ],
      'replacement_of' => [
        'description' => 'Plain text describing the legacy sites this one replaces',
        'type'        => 'text',
      ],
      'is_public' => [
        'description' => "Is this site public",
        'type'        => 'int',
        'size'        => 'tiny',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'template_id' => [
        'description' => "Template site identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => false,
      ],
      'is_template' => [
        'description' => "Is this site a template site",
        'type'        => 'int',
        'size'        => 'tiny',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'uid' => [
        'description' => "Account owner",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => false,
        'default'     => null,
      ],
      'ts_created' => [
        'decription'  => "Creation date",
        'mysql_type'  => 'datetime',
        'pgsql_type'  => 'timestamp',
        'type'        => 'varchar',
        'length'      => 16,
        'not null'    => false,
      ],
      'ts_changed' => [
        'decription'  => "Last updated time (state changed)",
        'mysql_type'  => 'datetime',
        'pgsql_type'  => 'timestamp',
        'type'        => 'varchar',
        'length'      => 16,
        'not null'    => false,
      ],
      'home_nid' => [
        'description' => "Site homepage node identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => false,
        'default'     => 0,
      ],
      'favicon_fid' => [
        'description' => "Favicon file identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => false,
        'default'     => null,
      ],
      'attributes' => [
        'description' => "Arbitrary site attributes, that other modules may use, this module will ignore it",
        'type'        => 'text',
        'not null'    => false,
        'default'     => null,
      ],
      'group_id' => [
        'description' => "Group identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
    ],
    'foreign keys' => [
      'uid' => [
        'table'   => 'users',
        'columns' => ['uid' => 'uid'],
        'delete'  => 'set null',
      ],
      'home_nid' => [
        'table'   => 'node',
        'columns' => ['home_nid' => 'nid'],
        'delete'  => 'set null',
      ],
      'favicon_fid' => [
        'table'   => 'file_managed',
        'columns' => ['favicon_fid' => 'fid'],
        'delete'  => 'set null',
      ],
      'template_id' => [
        'table'   => 'ucms_site',
        'columns' => ['template_id' => 'id'],
        'delete'  => 'set null',
      ],
      'group_id' => [
        'table'   => 'ucms_group',
        'columns' => ['group_id' => 'id'],
      ],
    ],
    'primary key' => ['id'],
  ];

  $schema['ucms_site_access'] = [
    'description' => 'Sites webmasters',
    'fields' => [
      'site_id' => [
        'description' => "Site identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'uid' => [
        'description' => "Webmaster",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'role' => [
        'description' => "Role in site, will be bitflags, nothing is simple user",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 1,
      ],
    ],
    'foreign keys' => [
      'site_id' => [
        'table'   => 'ucms_site',
        'columns' => ['site_id' => 'id'],
        'delete'  => 'cascade',
      ],
      'uid' => [
        'table'   => 'users',
        'columns' => ['uid' => 'uid'],
        'delete'  => 'cascade',
      ],
    ],
    'primary key' => ['site_id', 'uid'],
  ];

  $schema['ucms_site_node'] = [
    'description' => 'Sites nodes',
    'fields' => [
      'site_id' => [
        'description' => "Site identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'nid' => [
        'description' => "Node identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
    ],
    'foreign keys' => [
      'site_id' => [
        'table'   => 'ucms_site',
        'columns' => ['site_id' => 'id'],
        'delete'  => 'cascade',
      ],
      'nid' => [
        'table'   => 'node',
        'columns' => ['nid' => 'nid'],
        'delete'  => 'cascade',
      ],
    ],
    'primary key' => ['site_id', 'nid'],
  ];

  $schema['ucms_group'] = [
    'description' => 'Group definitions',
    'fields' => [
      'id' => [
        'description' => "Group identifier",
        'type'        => 'serial',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'title' => [
        'description' => 'Group title',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => true,
        'default'     => '',
      ],
      'is_ghost' => [
        'description' => "Default behavior for content visibility within this group",
        'type'        => 'int',
        'size'        => 'tiny',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 1,
      ],
      'is_meta' => [
        'description' => "Indicates which is the platform level default group, only one should have this to 1",
        'type'        => 'int',
        'size'        => 'tiny',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'ts_created' => [
        'decription'  => "Creation date",
        'mysql_type'  => 'datetime',
        'pgsql_type'  => 'timestamp',
        'type'        => 'varchar',
        'length'      => 16,
        'not null'    => false,
      ],
      'ts_changed' => [
        'decription'  => "Last updated time (state changed)",
        'mysql_type'  => 'datetime',
        'pgsql_type'  => 'timestamp',
        'type'        => 'varchar',
        'length'      => 16,
        'not null'    => false,
      ],
      'attributes' => [
        'description' => "Arbitrary site attributes, that other modules may use, this module will ignore it",
        'type'        => 'text',
        'not null'    => false,
        'default'     => null,
      ],
    ],
    'primary key' => ['id'],
  ];

  $schema['ucms_group_access'] = [
    'description' => 'Group users mapping',
    'fields' => [
      'group_id' => [
        'description' => "Group identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'user_id' => [
        'description' => "User identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'role' => [
        'description' => "Role in group, will be bitflags, nothing is simple user",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
    ],
    'foreign keys' => [
      'group_id' => [
        'table'   => 'ucms_group',
        'columns' => ['group_id' => 'id'],
        'delete'  => 'cascade',
      ],
      'user_id' => [
        'table'   => 'users',
        'columns' => ['user_id' => 'uid'],
        'delete'  => 'cascade',
      ],
    ],
    'primary key' => ['group_id', 'user_id'],
  ];

  $schema['ucms_node_reference'] = [
    'description' => 'Internal table that tracks node references',
    'fields' => [
      'source_id' => [
        'description' => "Source node identifier (contains the reference)",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'target_id' => [
        'description' => "Target node identifier (the referenced node)",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'type' => [
        'description' => "Reference type, should be 'link' or 'media', 'unknown' is default",
        'type'        => 'varchar',
        'length'      => 64,
        'not null'    => true,
        'default'     => 'unknown',
      ],
      'field_name' => [
        'description' => "Field name this reference was found into",
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => false,
        'default'     => null,
      ],
      'ts_touched' => [
        'decription'  => "Latest modification date",
        'mysql_type'  => 'datetime',
        'pgsql_type'  => 'timestamp',
        'type'        => 'varchar',
        'length'      => 16,
        'not null'    => true,
      ],
    ],
    'foreign keys' => [
      'source_id' => [
        'table'   => 'node',
        'columns' => ['source_id' => 'nid'],
      ],
    ],
    'primary key' => ['source_id', 'target_id', 'type'],
  ];

  $schema['ucms_auth_token'] = [
    'description' => 'Cross-site authentication SSO',
    'fields' => [
      'site_id' => [
        'description' => "Site identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 1,
      ],
      'user_id' => [
        'description' => "Site identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'token' => [
        'type'        => 'varchar',
        'length'      => 128,
        'not null'    => true,
      ],
      'ttl' => [
        'description' => "Lifetime in seconds",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'ts_touched' => [
        'decription'  => "Latest modification date",
        'mysql_type'  => 'datetime',
        'pgsql_type'  => 'timestamp',
        'type'        => 'varchar',
        'length'      => 16,
        'not null'    => true,
      ],
    ],
    'foreign keys' => [
      'site_id' => [
        'table'   => 'ucms_site',
        'columns' => ['site_id' => 'id'],
        'delete'  => 'cascade',
      ],
      'user_id' => [
        'table'   => 'users',
        'columns' => ['user_id' => 'uid'],
        'delete'  => 'cascade',
      ],
    ],
    'primary key' => ['site_id', 'user_id'],
  ];

  return $schema;
}

/**
 * Implements hook_schema_alter().
 */
function ucms_site_schema_alter(&$schema) {

  if (isset($schema['umenu'])) {
    $schema['umenu']['fields']['site_id'] = [
      'description' => "Site identifier",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
    ];
    $schema['umenu']['foreign keys']['site_id'] = [
      'table'   => 'ucms_site',
      'columns' => ['site_id' => 'id'],
    ];
  }

  if (isset($schema['taxonomy_term_data'])) {
    $schema['taxonomy_term_data']['fields']['is_locked'] = [
      'description' => "Is this term locked for modification and so the nodes are",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 0,
    ];
    $schema['taxonomy_term_data']['fields']['user_id'] = [
      'description' => "User which created the term",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => false,
      'default'     => null,
    ];
    $schema['taxonomy_term_data']['foreign keys']['user_id'] = [
      'table'   => 'users',
      'columns' => ['user_id' => 'uid'],
      'delete'  => 'set null',
    ];
  }
}

/**
 * Adds missing database table columns and constraints
 */
function ucms_site_install_schema_fix() {

  /*
  // Adds {taxonomy_term_data}.is_locked column.
  if (db_table_exists('taxonomy_term_data') && !db_field_exists('taxonomy_term_data', 'is_locked')) {
    db_add_field('taxonomy_term_data', 'is_locked', [
      'description' => "Is this term locked for modification and so the nodes are",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 0,
    ]);
  }
  // Adds {taxonomy_term_data}.user_id column.
  if (db_table_exists('taxonomy_term_data') && !db_field_exists('taxonomy_term_data', 'user_id')) {
    db_add_field('taxonomy_term_data', 'user_id', [
      'description' => "User which created the term",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => false,
      'default'     => null,
    ]);
  }

  // Adds {umenu}.site_id column.
  if (db_table_exists('umenu') && !db_field_exists('umenu', 'site_id')) {
    db_add_field('umenu', 'site_id', [
      'description' => "Site identifier",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => false,
      'default'     => null,
    ]);
  }
  if (db_table_exists('url_alias') && !db_field_exists('url_alias', 'is_canonical')) {
    db_add_field('url_alias', 'is_canonical', [
      'description' => "Is this alias the canonical alias for the source path",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 0,
    ]);
  }
  if (db_table_exists('url_alias') && !db_field_exists('url_alias', 'site_id')) {
    db_add_field('url_alias', 'site_id', [
      'description' => "Site identifier the alias lies on",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => false,
      'default'     => null,
    ]);
  }
   */

  /*
  db_constraint_fix_processed('menu');
  db_constraint_fix_processed('node');
  db_constraint_fix_processed('system');
  db_constraint_fix_processed('taxonomy');
  db_constraint_fix_processed('user');
   */
  db_constraint_fix('ucms_site');
}

/**
 * Implements hook_module_installed().
 */
function ucms_site_module_installed($modules) {
  ucms_site_install_schema_fix();
}

/**
 * Implements hook_install().
 */
function ucms_site_install() {
  ucms_site_install_schema_fix();
  ucms_site_install_default_group();
  //variable_set('node_access_needs_rebuild', 1);
}

/**
 * Creates the default plateform-wide group.
 */
function ucms_site_install_default_group() {
  ucms_site_install_schema_fix();

  $defaultGroupId = db_query('SELECT id FROM {ucms_group} WHERE is_meta = 1')->fetchField();

  if (!$defaultGroupId) {
    $defaultGroupId = db_insert('ucms_group')->fields([
      'title'      => "Default group",
      // This group cannot be deleted
      'is_meta'    => 1,
      // Per default, already existing content will no be visible
      'is_ghost'   => 1,
      'ts_created' => (new DateTime())->format('Y-m-d H:i:s'),
      'ts_changed' => (new DateTime())->format('Y-m-d H:i:s'),
    ])->execute();
  }

  // Those two must be kept out of the if () because some existing platforms
  // already have a default group, but may still have sites which don't belong
  // to any groups.

  // Set all sites with no groups into this group
  db_query("UPDATE {ucms_site} SET group_id = ? WHERE group_id IS NULL", [$defaultGroupId]);
  // Give all nodes without any group to this group
  db_query("UPDATE {node_field_data} SET group_id = ? WHERE group_id IS NULL", [$defaultGroupId]);
}

function ucms_site_update_8003() {
  $definition_manager = \Drupal::entityDefinitionUpdateManager();
  foreach (NodeDefinition::getAdditionalBaseFields() as $name => $definition) {
    $definition_manager->installFieldStorageDefinition($name, 'node', 'node', $definition);
  }
}

function ucms_site_update_8005() {
  if (!db_table_exists('ucms_auth_token')) {
    db_create_table('ucms_auth_token', drupal_get_module_schema('ucms_site', 'ucms_auth_token'));
  }
}

function ucms_site_update_8006() {
  if (db_table_exists('ucms_site') && !db_field_exists('ucms_site', 'favicon_fid')) {
    db_add_field('ucms_site', 'favicon_fid', [
      'description' => "Favicon file identifier",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => false,
      'default'     => null,
    ]);
  }
  db_query("DELETE FROM {ucms_auth_token} WHERE site_id NOT IN (SELECT id FROM {ucms_site})");
  db_query("DELETE FROM {ucms_auth_token} WHERE user_id NOT IN (SELECT uid FROM {users})");
  db_query("DELETE FROM {ucms_site_access} WHERE site_id NOT IN (SELECT id FROM {ucms_site})");
  db_query("DELETE FROM {ucms_site_access} WHERE uid NOT IN (SELECT uid FROM {users})");
  db_query("DELETE FROM {ucms_site_node} WHERE nid NOT IN (SELECT nid FROM {node})");
  db_query("DELETE FROM {ucms_site_node} WHERE site_id NOT IN (SELECT id FROM {ucms_site})");
  db_query("UPDATE {ucms_site} SET favicon_fid = NULL WHERE favicon_fid NOT IN (SELECT fid FROM {file_managed})");
  db_query("UPDATE {ucms_site} SET home_nid = NULL WHERE home_nid NOT IN (SELECT nid FROM {node})");
  ucms_site_install_schema_fix();
}
