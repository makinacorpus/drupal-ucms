<?php
/**
 * @file
 * ÂµCMS notifications module.
 *
 * This module has been separated from the rest in order to remain decoupled
 * from the APubSub notification system, and deactivable.
 *
 * @todo
 *   Handle role removal on users (role add is handled at login time)
 *
 * Complete list of channels we will use:
 *  - admin:client              user account administration messages
 *  - admin:content             content management messages
 *  - admin:label               taxonomy management messages
 *  - admin:site                site administration messages
 *  - admin:client:X            user account administration messages in group X
 *  - admin:content:X           content management messages in group X
 *  - admin:label:X             taxonomy management messages in group X
 *  - admin:site:X              site administration messages in group X
 *  - client:X                  each user private messages
 *  - label:X                   each taxonomy term own channel
 *  - site:X                    each site management own channel
 */

use MakinaCorpus\Ucms\Notification\Access;

/**
 * Implements hook_permission().
 */
function ucms_notification_permission() {
  return [
    Access::PERM_NOTIF_CONTENT => [
      'title' => t("Receive content admin notifications"),
    ],
    Access::PERM_NOTIF_LABEL => [
      'title' => t("Receive label admin notifications"),
    ],
    Access::PERM_NOTIF_SEO => [
      'title' => t("Receive SEO admin notifications"),
    ],
    Access::PERM_NOTIF_SITE => [
      'title' => t("Receive site admin notifications"),
    ],
    Access::PERM_NOTIF_USER => [
      'title' => t("Receive user admin notifications"),
    ],
  ];
}

/**
 * Implements hook_user_login().
 */
function ucms_notification_user_login(&$edit, $account) {
  // This is called late at install, so filter out superadmin.
  if ($account->uid > 1) {
    /** @var \MakinaCorpus\Ucms\Notification\NotificationService $service */
    $service = \Drupal::service('ucms_notification.service');
    $service->refreshSubscriptionsFor($account->uid);
  }
}

/**
 * Implements hook_user_update().
 */
function ucms_notification_user_update(&$edit, $account, $category) {
  // This is called late at install, so filter out superadmin.
  if ($account->uid > 1 && $account->original) {
    /** @var \MakinaCorpus\Ucms\Notification\NotificationService $service */
    $service = \Drupal::service('ucms_notification.service');
    $service->refreshSubscriptionsFor($account->uid);
  }
}

/**
 * Implements hook_user_cancel().
 */
function ucms_notification_user_cancel($edit, $account, $method) {
  /** @var \MakinaCorpus\Ucms\Notification\NotificationService $service */
  $service = \Drupal::service('ucms_notification.service');
  $service->deleteSubscriptionsFor($account->id());
  // $service->getNotificationService()->deleteSubscriber($account->uid);
}

/**
 * Implements hook_user_delete().
 */
function ucms_notification_user_delete($account) {
  /** @var \MakinaCorpus\Ucms\Notification\NotificationService $service */
  $service = \Drupal::service('ucms_notification.service');
  $service->deleteSubscriptionsFor($account->id());
  // $service->getNotificationService()->deleteSubscriber($account->uid);
}
