<?php

use MakinaCorpus\PluSQL\Constraint;

/**
 * Implements hook_schema().
 */
function ucms_layout_schema() {
  $schema = [];

  $schema['ucms_layout'] = [
    'description' => 'Layout instances',
    'fields' => [
      'id' => [
        'description' => "Layout identifier",
        'type'        => 'serial',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'site_id' => [
        'description' => 'Site identifier',
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'nid' => [
        'description' => 'Node identifier this layout is attached to',
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
    ],
    'unique keys' => [
      'site_id_nid_key' => ['site_id', 'nid'],
    ],
    'foreign keys' => [
      'nid' => [
        'table'   => 'ucms_site_node',
        'columns' => [
          'site_id' => 'site_id',
          'nid'     => 'nid',
        ],
        'delete'  => 'cascade',
      ],
    ],
    'primary key' => ['id'],
  ];

  $schema['ucms_layout_data'] = [
    'description' => 'Layout instances data',
    'fields' => [
      'layout_id' => [
        'description' => "Layout identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'region' => [
        'description' => 'Region',
        'type'        => 'varchar',
        'length'      => 64,
        'not null'    => true,
      ],
      'nid' => [
        'description' => 'Node identifier',
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'weight' => [
        'description' => "Weight in region",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'view_mode' => [
        'description' => "Node view mode",
        'type'        => 'varchar',
        'length'      => 64,
        'not null'    => true,
        'default'     => 'teaser',
      ],
    ],
    'foreign keys' => [
      'layout_id' => [
        'table'   => 'ucms_layout',
        'columns' => ['layout_id' => 'id'],
        'delete'  => 'cascade',
      ],
      'nid' => [
        'table'   => 'node',
        'columns' => ['nid' => 'nid'],
        'delete'  => 'cascade',
      ],
    ],
    'indexes' => [
      'ucms_layout_sort_idx' => ['layout_id', 'region', 'weight'],
    ],
    'primary key' => ['layout_id', 'region', 'nid', 'weight'],
  ];

  $schema['cache_layout'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_layout']['description'] = 'Cache table for the Field module to store already built field information.';

  return $schema;
}

/**
 * Adds missing database table columns and constraints.
 */
function ucms_layout_install_schema_fix() {
  drupal_get_complete_schema(true);
  db_constraint_add_all('ucms_layout', drupal_get_schema('ucms_layout'));
  db_constraint_add_all('ucms_layout_data', drupal_get_schema('ucms_layout_data'));
}

/**
 * Implements hook_install().
 */
function ucms_layout_install() {
  ucms_layout_install_schema_fix();
}

/**
 * Create the {cache_layout} table.
 */
function ucms_layout_update_7001() {
  if (!db_table_exists('cache_layout')) {
    db_create_table('cache_layout', drupal_get_schema_unprocessed('ucms_layout', 'cache_layout'));
  }
}

/**
 * Refactor the schema (sorry about this one).
 */
function ucms_layout_update_7002() {

  db_drop_table('ucms_layout_data');
  db_drop_table('ucms_layout');

  db_create_table('ucms_layout', drupal_get_schema_unprocessed('ucms_layout', 'ucms_layout'));
  db_create_table('ucms_layout_data', drupal_get_schema_unprocessed('ucms_layout', 'ucms_layout_data'));

  ucms_layout_install_schema_fix();
}

/**
 * Add primary key.
 */
function ucms_layout_update_7003() {
  if (db_table_exists('ucms_layout_data')) {
    db_query("ALTER TABLE {ucms_layout_data} ADD PRIMARY KEY (layout_id, region, nid, weight)");
  }
}

/**
 * Refactor the schema and cleanup data.
 */
function ucms_layout_update_7004() {

  // These are remains of the past.
  if (db_constraint_exists_unsafe('ucms_layout', Constraint::FOREIGN_KEY, 'fk_ucms_layout_site')) {
    db_constraint_drop_unsafe('ucms_layout', Constraint::FOREIGN_KEY, 'fk_ucms_layout_site');
  }
  if (db_constraint_exists_unsafe('ucms_layout', Constraint::FOREIGN_KEY, 'fk_ucms_layout_nid')) {
    db_constraint_drop_unsafe('ucms_layout', Constraint::FOREIGN_KEY, 'fk_ucms_layout_nid');
  }
  if (db_constraint_exists_unsafe('ucms_layout_data', Constraint::FOREIGN_KEY, 'fk_ucms_layout_data_id')) {
    db_constraint_drop_unsafe('ucms_layout_data', Constraint::FOREIGN_KEY, 'fk_ucms_layout_data_id');
  }
  if (db_constraint_exists_unsafe('ucms_layout_data', Constraint::FOREIGN_KEY, 'fk_ucms_layout_data_node')) {
    db_constraint_drop_unsafe('ucms_layout_data', Constraint::FOREIGN_KEY, 'fk_ucms_layout_data_node');
  }

  // We don't have any foreign key anymore, but let's enfore them with some
  // DELETE queries.
  db_query("DELETE l.* FROM {ucms_layout} l WHERE NOT EXISTS (SELECT 1 FROM {ucms_site_node} s WHERE s.site_id = l.site_id AND s.nid = l.nid)");
  db_query("DELETE d.* FROM {ucms_layout_data} d WHERE NOT EXISTS (SELECT 1 FROM {ucms_layout} l WHERE l.id = d.layout_id)");

  ucms_layout_install_schema_fix();
}

/**
 * Restores node references in sites.
 *
 * After this update, you do need to rebuild node access.
 */
function ucms_layout_update_7005() {

  $countQuery = <<<EOT
      SELECT
          COUNT(d.nid)
      FROM {ucms_layout} l
      JOIN {ucms_layout_data} d
          ON d.layout_id = l.id
      LEFT JOIN {ucms_site_node} s
          ON s.site_id = l.site_id
          AND s.nid = d.nid
      WHERE
          s.site_id IS NULL
EOT;

  $count = (int)db_query($countQuery)->fetchField();

  if (!$count) {
    return;
  }

  $updateQuery = <<<EOT
      INSERT INTO {ucms_site_node}
          (nid, site_id)
      SELECT DISTINCT
          d.nid, l.site_id
      FROM {ucms_layout} l
      JOIN {ucms_layout_data} d
          ON d.layout_id = l.id
      LEFT JOIN {ucms_site_node} s
          ON s.site_id = l.site_id
          AND s.nid = d.nid
      WHERE
          s.site_id IS NULL
EOT;

  db_query($updateQuery);

  variable_set('node_access_needs_rebuild', true);
}
